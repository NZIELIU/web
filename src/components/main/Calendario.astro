---
// src/components/SchoolCalendar.astro
import { format } from 'date-fns';
import { es } from 'date-fns/locale';

const currentDate = new Date();
const currentMonth = currentDate.getMonth();
const currentYear = currentDate.getFullYear();

const daysInMonth = new Date(currentYear, currentMonth + 1, 0).getDate();
const firstDayOfMonth = new Date(currentYear, currentMonth, 1).getDay();

const monthName = format(currentDate, 'MMMM yyyy', { locale: es });

const events = [
  { date: new Date(currentYear, currentMonth, 5), title: 'Día del Maestro', color: 'bg-blue-500' },
  { date: new Date(currentYear, currentMonth, 15), title: 'Feria de Ciencias', color: 'bg-green-500' },
  { date: new Date(currentYear, currentMonth, 22), title: 'Competencia Deportiva', color: 'bg-red-500' },
  { date: new Date(currentYear, currentMonth, 28), title: 'Reunión de Padres', color: 'bg-purple-500' },
];

const getEventForDate = (date) => {
  return events.find(event => event.date.getDate() === date);
};
---

<div class="text-primary container mx-auto px-6 text-center">
    <h2 class="text-4xl md:text-5xl font-bold mb-4">Calendario Escolar</h2>
</div>
<br>
<div class="max-w-md mx-auto bg-white rounded-xl shadow-md overflow-hidden md:max-w-2xl m-4">
  <div class="p-8">
    <div class="uppercase tracking-wide text-sm text-indigo-500 font-semibold mb-1">Calendario Escolar</div>
    <h2 class="block mt-1 text-lg leading-tight font-medium text-black">{monthName}</h2>
    <div class="mt-4 grid grid-cols-7 gap-2">
      {['Dom', 'Lun', 'Mar', 'Mié', 'Jue', 'Vie', 'Sáb'].map(day => (
        <div class="text-center font-bold">{day}</div>
      ))}
      {Array.from({ length: firstDayOfMonth }).map((_, index) => (
        <div key={`empty-${index}`}></div>
      ))}
      {Array.from({ length: daysInMonth }).map((_, index) => {
        const date = index + 1;
        const event = getEventForDate(date);
        return (
          <div class="relative">
            <div class={`text-center p-1 ${currentDate.getDate() === date ? 'bg-indigo-100 rounded-full' : ''}`}>
              {date}
            </div>
            {event && (
              <div class={`absolute bottom-0 left-1/2 transform -translate-x-1/2 w-2 h-2 rounded-full ${event.color}`}></div>
            )}
          </div>
        );
      })}
    </div>
  </div>
  <div class="px-8 py-4 bg-gray-50">
    <h3 class="text-sm font-semibold text-gray-700 mb-2">Eventos del Mes</h3>
    <ul class="space-y-2">
      {events.map(event => (
        <li class="flex items-center">
          <span class={`w-3 h-3 rounded-full mr-2 ${event.color}`}></span>
          <span class="text-sm">{format(event.date, 'd')} - {event.title}</span>
        </li>
      ))}
    </ul>
  </div>
</div>
<br>

<script>
  const calendarDays = document.querySelectorAll('.relative');
  calendarDays.forEach(day => {
    day.addEventListener('click', () => {
      const date = day.querySelector('div').textContent;
      const event = events.find(e => e.date.getDate() === parseInt(date));
      if (event) {
        alert(`Evento: ${event.title} - ${format(event.date, 'd MMMM yyyy', { locale: es })}`);
      }
    });
  });
</script>